{"version":3,"sources":["component/Navbar.js","component/Alert.js","component/About.js","component/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","dist","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlfor","text","Alert","style","height","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","setStyle","color","backgroundColor","aria-labelledby","data-bs-parent","Textform","_useState","useState","_useState2","Object","slicedToArray","setText","Fragment","heading","value","background","onChange","event","target","rows","disabled","length","newText","showAlert","navigator","clipboard","writeText","document","getSelection","removeAllRanges","replace","split","filter","element","prototype","PropTypes","stringisRequired","about","defaultProps","App","setMode","_useState3","_useState4","_useState5","_useState6","setAlert","message","setTimeout","body","setInterval","react_router_dist","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.dfcfb170.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// rfc short to open this format\r\nimport { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\" >{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li> */}\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li>\r\n            </ul>\r\n            \r\n            <div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">{props.text}</label>\r\n</div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\nNavbar.prototype = {\r\n  title: PropTypes.stringisRequired,\r\n  about: PropTypes.stringisRequired,\r\n\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"util\", aboutText: \"about\"\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  const capitalize=(word)=>{\r\n    const lower=word.toLowerCase();\r\n    return word.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    <div style={{height:\"50px\"}}>\r\n\r\n      \r\n{props.alert &&   <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n  \r\n</div>}\r\n    </div>\r\n  \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    \r\n      let   setStyle={\r\n          color:props.mode===\"light\"?\"black\":\"white\",\r\n          backgroundColor:props.mode===\"light\"?\"white\":\"hsl(201deg 25% 45%)\"\r\n\r\n         }  \r\n    \r\n    \r\n  return (\r\n    <div>\r\n        <h1>{props.title}</h1>\r\n      <div className=\"accordion\"  id=\"accordionExample\" >\r\n  <div className=\"accordion-item\" >\r\n    <h2 className=\"accordion-header\" id=\"headingOne\" >\r\n      <button className=\"accordion-button\" type=\"button\" style={setStyle} data-bs-toggle=\"collapse\"  data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n       <strong>Analyze your text</strong> \r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\"  aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={setStyle}   >\r\n      Textutils gives you a way to analyze your text quickly and effectively. Be it word count, character count or\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" style={setStyle}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n       <strong>Free to use</strong> \r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={setStyle}  >\r\n      TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit. \r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" style={setStyle} type=\"button\"  data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n       <strong>Browser compatible</strong> \r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={setStyle} >\r\n        This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\nexport default function Textform(props) {\r\n  const handleUpperCase=()=>{\r\n    \r\n      const newText=text.toUpperCase();\r\n      setText(newText);\r\n      props.showAlert(\"converted to uppercase\",\"success\");\r\n    \r\n    }\r\n    const handleLowerCase=()=>{\r\n      \r\n        const newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to lowercase\",\"success\");\r\n      \r\n      \r\n    }\r\n    const handleClear=()=>{\r\n      const newText=\"\";\r\n      setText(newText);\r\n    }\r\n    const handleCopy=()=>{\r\n      \r\n        \r\n        navigator.clipboard.writeText(text);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"copied to clipboard\",\"success\");\r\n      \r\n    }\r\n    const onchangeClick=(event)=>{\r\n      // console.log('onchange');\r\n      setText(event.target.value);\r\n      \r\n    }\r\n    const handleExtraSpaces=()=>{\r\n      \r\n        const newText=text.replace(/\\s+/g,\" \");\r\n        setText(newText);\r\n        props.showAlert(\"remove extra spaces\",\"success\");\r\n      \r\n  }\r\n    const [text, setText] = useState(\"enter your thought\");\r\n  return (\r\n\r\n    <>  \r\n    \r\n    <div>\r\n      <div className=\"mb-3 \">\r\n  <h1>{props.heading}</h1>\r\n  <textarea className=\"form-control\" value={text} style={{background:props.mode==='light'?'white':'#364f5c',color:props.mode==='light'?'black':'white'}} onChange={onchangeClick} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpperCase}>Convert To Uppercase</button>\r\n    <button  disabled={text.length===0} className=\"btn btn-primary mx-2 my-2 \" onClick={handleLowerCase}>Convert To Lowercase</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClear}>Clear Text</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    \r\n    </div>\r\n    <div className=\"container my-3 \">\r\n      <h2>your text summary</h2>\r\n      <p>\r\n        {text.split(/\\s+/).filter((element)=>element.length!==0).length} words and characters {text.split(/\\w/g).length-1}</p>\r\n      <p>{0.008*text.split(/\\s+/).filter((element)=>element.length!==0).length} minutes to read</p>\r\n      <h2>preview</h2>\r\n      <p>{text.length===0? \"Nothing to preview\":text}</p>\r\n    </div>\r\n      \r\n    </>\r\n    \r\n  )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Alert from './component/Alert';\nimport About from './component/About'; \nimport Textform from './component/Textform';\nimport { \n  BrowserRouter as Router, \n  Routes, \n  Route,\n\n} from \"react-router-dom\"; \nfunction App() {\n  const [mode,setMode] = useState('light');\n  const [text, setText] = useState(\"Enable dark mode\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    }\n    )\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n\n  }\n  \n  const toggleMode = () => {\n    \n    if (mode=='light') {\n      setMode('dark');\n      \n      setText('Enable light mode');\n      document.body.style.backgroundColor = \"#364f5c\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n     \n      setInterval(() => {\n\n      document.title = \"textutils dark mode\";\n      }, 1000);\n    }\n\n    else {\n      setMode('light'); \n      setText('Enable dark mode'); \n      document.body.style.backgroundColor = \"white\"; \n      document.body.style.color = \"black\";\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = \"textutils light mode\";\n    }\n  }\n  return (\n    <>\n       <Router>  \n\n        <Navbar title=\"Textutil\" aboutText=\"about\" mode={mode}  text={text} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\" >\n          <Routes>     \n            <Route  exact path=\"/about\" element={    \n\n               <About title=\"About Us\" mode={mode}  />   }    \n             > \n\n              </Route>    \n\n              <Route exact path=\"/\" element={   \n\n              <Textform heading=\"Try TextUtils - word counter, character counter, remove extra spaces\"  mode={mode} showAlert={showAlert} />\n              }>    \n\n            </Route>   \n          </Routes>   \n\n        </div>\n      </Router>   \n\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}