{"version":3,"sources":["component/Navbar.js","component/Alert.js","component/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","text","Alert","style","height","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Textform","_useState","useState","_useState2","Object","slicedToArray","setText","Fragment","heading","value","background","color","onChange","event","target","rows","disabled","length","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","replace","split","filter","element","prototype","PropTypes","stringisRequired","about","defaultProps","aboutText","App","setMode","_useState3","_useState4","_useState5","_useState6","setAlert","message","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.07c744c2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// rfc short to open this format\r\n// import { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\" >{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button> \r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li> */}\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n      </ul>\r\n         <div className={`form-check form-switch text-${props.mode==='light'? 'dark':'light'}`}>\r\n             <input className=\"form-check-input\" type=\"checkbox\"  id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n             <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.text}</label>\r\n         </div>\r\n\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\nNavbar.prototype={title:PropTypes.stringisRequired,\r\n                  about:PropTypes.stringisRequired,\r\n  \r\n}\r\nNavbar.defaultProps={\r\n  title:\"util\", aboutText:\"about\"\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  const capitalize=(word)=>{\r\n    const lower=word.toLowerCase();\r\n    return word.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    <div style={{height:\"50px\"}}>\r\n\r\n      \r\n{props.alert &&   <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n  \r\n</div>}\r\n    </div>\r\n  \r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\nexport default function Textform(props) {\r\n  const handleUpperCase=()=>{\r\n    \r\n      const newText=text.toUpperCase();\r\n      setText(newText);\r\n      props.showAlert(\"converted to uppercase\",\"success\");\r\n    \r\n    }\r\n    const handleLowerCase=()=>{\r\n      \r\n        const newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to lowercase\",\"success\");\r\n      \r\n      \r\n    }\r\n    const handleClear=()=>{\r\n      const newText=\"\";\r\n      setText(newText);\r\n    }\r\n    const handleCopy=()=>{\r\n      \r\n        const text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"copied to clipboard\",\"success\");\r\n      \r\n    }\r\n    const onchangeClick=(event)=>{\r\n      // console.log('onchange');\r\n      setText(event.target.value);\r\n      \r\n    }\r\n    const handleExtraSpaces=()=>{\r\n      \r\n        const newText=text.replace(/\\s+/g,\" \");\r\n        setText(newText);\r\n        props.showAlert(\"remove extra spaces\",\"success\");\r\n      \r\n  }\r\n    const [text, setText] = useState(\"enter your thought\");\r\n  return (\r\n\r\n    <>  \r\n    \r\n    <div>\r\n      <div className=\"mb-3 \">\r\n  <h1>{props.heading}</h1>\r\n  <textarea className=\"form-control\" value={text} style={{background:props.mode==='light'?'white':'#364f5c',color:props.mode==='light'?'black':'white'}} onChange={onchangeClick} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpperCase}>Convert To Uppercase</button>\r\n    <button  disabled={text.length===0} className=\"btn btn-primary mx-2 my-2 \" onClick={handleLowerCase}>Convert To Lowercase</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClear}>Clear Text</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    \r\n    </div>\r\n    <div className=\"container my-3 \">\r\n      <h2>your text summary</h2>\r\n      <p>\r\n        {text.split(\" \").filter((element)=>element.length!==0).length} words and characters {text.length}</p>\r\n      <p>{0.008*text.split(\" \").filter((element)=>element.length!==0).length} minutes to read</p>\r\n      <h2>preview</h2>\r\n      <p>{text.length===0? \"Nothing to preview\":text}</p>\r\n    </div>\r\n      \r\n    </>\r\n    \r\n  )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Alert from './component/Alert';\n// import About from './component/About'; \nimport Textform from './component/Textform';\n// import { \n//   BrowserRouter as Router, \n//   Routes, \n//   Route,\n\n// } from \"react-router-dom\"; \nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [text, setText] = useState(\"Enable dark mode\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    }\n    )\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n\n  }\n  const handleModeChange = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      setText('Enable light mode');\n      document.body.style.backgroundColor = \"#364f5c\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // setInterval(() => {\n      //   document.title=\"install textutils\"\n      // }, 1500);\n      // setInterval(() => {\n\n      document.title = \"textutils dark mode\";\n      // }, 1000);\n    }\n\n    else {\n      setMode('light');\n      setText('Enable dark mode');\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = \"textutils light mode\";\n    }\n  }\n  return (\n    <>\n      {/* <Router>  */}\n\n        <Navbar title=\"Textutil\" aboutText=\"about\" mode={mode} text={text} toggleMode={handleModeChange} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\" >\n          {/* <Routes>     */}\n            {/* <Route  exact path=\"/about\" element={    */}\n\n              {/* <About title=\"About Us\" mode={mode} />   }   */}\n            {/* >       */}\n\n             {/* </Route>    */}\n\n             {/* <Route exact path=\"/\" element={   */}\n\n              <Textform heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode} showAlert={showAlert} />\n              {/* }>    */}\n\n            {/* </Route>   */}\n          {/* </Routes>   */}\n\n        </div>\n      {/* </Router>   */}\n\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}